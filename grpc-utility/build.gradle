/******************************************************************************
 * Copyright 2009-2020 Exactpro (Exactpro Systems Limited)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
apply plugin: 'com.google.protobuf'

ext {
    grpcVersion         = '1.27.1'
    reactiveGrpcVersion = '1.0.1'
    protobufVersion     = '3.11.0'
    genDir              = file('src/gen')
}

dependencies {
    compile "io.grpc:grpc-protobuf:${grpcVersion}"
    compile "com.google.protobuf:protobuf-java-util:${protobufVersion}"
    compile "io.grpc:grpc-stub:${grpcVersion}"
    compile "io.grpc:grpc-core:${grpcVersion}"
    compile "io.grpc:grpc-netty:${grpcVersion}"

    compile "com.salesforce.servicelibs:rxgrpc-stub:${reactiveGrpcVersion}"
    compile "io.reactivex.rxjava2:rxjava:2.2.19" // https://github.com/salesforce/reactive-grpc/issues/202

    compile "com.exactpro.th2:th2-grpc-infra:${th2CommonVersion}"
}

sourceSets {
    main {
        java {
            srcDirs 'src/gen/main/java'
            srcDirs 'src/gen/main/grpc'
            srcDirs 'src/gen/main/rxgrpc'
        }
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"

    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
        rxgrpc {
            artifact = "com.salesforce.servicelibs:rxgrpc:${reactiveGrpcVersion}"
        }
    }
    generateProtoTasks.generatedFilesBaseDir = genDir
    generateProtoTasks {
        ofSourceSet("main")*.plugins {
            grpc {}
            rxgrpc {}
        }
    }
}

// may be deleted
compileJava.dependsOn.add('generateProto')

task zipProtobuf (type: Zip) {
    classifier 'protobuf'

    from sourceSets.main.proto.srcDirs
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact source: zipProtobuf, extension: 'zip'
        }
    }
}

clean {
    delete genDir
}