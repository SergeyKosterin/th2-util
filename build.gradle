plugins {
    id 'com.google.protobuf' version '0.8.8' apply false
    id 'com.palantir.docker' version '0.25.0' apply false
    id "com.jfrog.artifactory" version '4.15.1'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.artifactory'

    ext {
        sharedDir           = file("${project.rootDir}/shared")

        sailfishVersion     = '3.2-SNAPSHOT'
        th2CommonVersion    = '1.4.2'
    }

    group = 'com.exactpro.th2'
    version = release_version

    sourceCompatibility = 11
    targetCompatibility = 11

    repositories {
        maven {
            name 'MavenLocal'
            url sharedDir
        }
        mavenCentral()
        maven {
            name 'Artifactory snapshot'
            url 'http://artifactory5.exp.exactpro.com/artifactory/libs-snapshot'
        }
        maven {
            name 'Artifactory release'
            url 'http://artifactory5.exp.exactpro.com/artifactory/libs-release'
        }
        mavenLocal()

        configurations.all {
            resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
            resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
        }
    }

    jar {
        manifest {
            attributes(
                    'Created-By':               "${System.getProperty('java.version')} (${System.getProperty('java.vendor')})",
                    'Specification-Title':      '',
                    'Specification-Vendor':     'Exactpro Systems LLC',
                    'Implementation-Title':     project.archivesBaseName,
                    'Implementation-Vendor':    'Exactpro Systems LLC',
                    'Implementation-Vendor-Id': 'com.exactpro',
                    'Implementation-Version':   project.version
            )
        }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
            }
        }

        repositories {
            maven {
                name = 'localRepo'
                url = sharedDir
            }
        }
    }

    artifactoryPublish.skip = true

    artifactory {
        publish {
            contextUrl = "${artifactory_url}"
            repository {
                repoKey = "${artifactory_deploy_repo_key}" // The Artifactory repository key to publish to
                username = "${artifactory_user}" // The publisher user name
                password = "${artifactory_password}" // The publisher password
            }
            defaults {
                // Reference to Gradle publications defined in the build script.
                // This is how we tell the Artifactory Plugin which artifacts should be
                // published to Artifactory.
                publications('mavenJava')
                publishArtifacts = true
                publishBuildInfo = true
                // Properties to be attached to the published artifacts.
                publishPom = true
            }
        }
    }
}

apply plugin: 'application'
apply plugin: 'com.palantir.docker'

ext {
    slf4jVersion        = '1.7.30'
    dockerImageVersion  = release_version
}

archivesBaseName = 'utility-service'

dependencies {
    compile project(':th2-grpc-utility')

    compile "com.exactpro.th2:th2-common:${th2CommonVersion}"
    compile "com.exactpro.th2:th2-sailfish-utils:1.3.0"

    compile "com.exactpro.sf:sailfish-core:${sailfishVersion}"

    compile "org.slf4j:slf4j-log4j12:${slf4jVersion}"
    compile "org.slf4j:slf4j-api:${slf4jVersion}"

    testImplementation 'junit:junit:4.12'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'th2-utility'
        }
    }
}

application {
    mainClassName 'com.exactpro.th2.utility.MicroserviceMain'
}

applicationName = 'service'


distTar {
    archiveName "${applicationName}.tar"
}

dockerPrepare {
    dependsOn distTar
}

docker {
    copySpec.from(tarTree("$buildDir/distributions/${applicationName}.tar"))
}